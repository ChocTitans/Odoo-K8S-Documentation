apiVersion: apps/v1
kind: Deployment
metadata:
  name: erp-odoo
  namespace: "default"
  labels:
    app.kubernetes.io/instance: erp
    app.kubernetes.io/name: odoo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: erp
      app.kubernetes.io/name: odoo
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: erp
        app.kubernetes.io/name: odoo
    spec:
      
      serviceAccountName: erp-odoo
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: erp
                    app.kubernetes.io/name: odoo
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      containers:
        - name: erp-odoo
          image: docker.io/bitnami/odoo:16.0.20230915-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: ODOO_DATABASE_HOST
              value: "db-postgresql"
            - name: ODOO_DATABASE_PORT_NUMBER
              value: "5432"
            - name: ODOO_DATABASE_NAME
              value: bitnami_odoo
            - name: ODOO_DATABASE_USER
              value: bn_odoo
            - name: ODOO_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-db-postgresql
                  key: password
            - name: ODOO_EMAIL
              value: "user@example.com"
            - name: ODOO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-erp-odoo
                  key: odoo-password
            - name: ODOO_SKIP_BOOTSTRAP
              value: "no"
            - name: ODOO_LOAD_DEMO_DATA
              value: "no"
          envFrom:
          ports:
            - name: http
              containerPort: 8069
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 600
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /web/health
              port: http
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /web/health
              port: http
          resources:
            limits: {}
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - name: odoo-data
              mountPath: /bitnami/odoo
      volumes:
        - name: odoo-data
          persistentVolumeClaim:
            claimName: erp-odoo